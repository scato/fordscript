module type

// mark-types :: add type annotations to AST
// get-*-type :: get the type of something recorded with check/record

imports
//  libstratego-lib
//  libstratego-gpp
//  libstratego-aterm
  include/FordScript
  lib/editor-common.generated
  check/record
  type/collect
  type/apply

rules
	// add type annotations to AST
  mark-types = mark-vars
  
  mark-vars:
    JSModule(s*) -> result
    with
    	var-types := <collect-var-types> s*;
    	result := <apply-var-types(|var-types)> JSModule(s*)
  
  get-static-member-type:
    (i, m) -> t
    where
      if(<GetStaticMemberType> (i, m)) then
        t := <GetStaticMemberType> (i, m)
      else
        t := "Object"
      end
  
  get-member-type:
    (i, m) -> t
    where
      if(<GetMemberType> (i, m)) then
        t := <GetMemberType> (i, m)
      else
        t := <get-member-type> (<GetSuperClass> i, m)
      end
  
  get-member-return-type:
    (i, m) -> t
    where
      if(<GetMemberReturnType> (i, m)) then
        t := <GetMemberReturnType> (i, m)
      else
        t := <get-member-return-type> (<GetSuperClass> i, m)
      end
